// <auto-generated />
using System;
using HospiEnCasa.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HospiEnCasa.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("HospiEnCasa.App.Dominio.historia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Diagnostico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entorno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Historias");
                });

            modelBuilder.Entity("HospiEnCasa.App.Dominio.persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroTelefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("persona");
                });

            modelBuilder.Entity("HospiEnCasa.App.Dominio.signoVital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("Signo")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.Property<int?>("pacienteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("pacienteId");

                    b.ToTable("SignosVitales");
                });

            modelBuilder.Entity("HospiEnCasa.App.Dominio.sugerenciaCuidado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int?>("historiaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("historiaId");

                    b.ToTable("SugerenciasCuidado");
                });

            modelBuilder.Entity("HospiEnCasa.App.Dominio.enfermera", b =>
                {
                    b.HasBaseType("HospiEnCasa.App.Dominio.persona");

                    b.Property<int>("HorasLaborales")
                        .HasColumnType("int");

                    b.Property<string>("TarjetaProfesional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("enfermera");
                });

            modelBuilder.Entity("HospiEnCasa.App.Dominio.familiarDesignado", b =>
                {
                    b.HasBaseType("HospiEnCasa.App.Dominio.persona");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parentesco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("familiarDesignado");
                });

            modelBuilder.Entity("HospiEnCasa.App.Dominio.medico", b =>
                {
                    b.HasBaseType("HospiEnCasa.App.Dominio.persona");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistroRethus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("medico");
                });

            modelBuilder.Entity("HospiEnCasa.App.Dominio.paciente", b =>
                {
                    b.HasBaseType("HospiEnCasa.App.Dominio.persona");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnfermeraId")
                        .HasColumnType("int");

                    b.Property<int?>("FamiliarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HistoriaId")
                        .HasColumnType("int");

                    b.Property<float>("Longitude")
                        .HasColumnType("real");

                    b.Property<int?>("MedicoId")
                        .HasColumnType("int");

                    b.Property<float>("latitude")
                        .HasColumnType("real");

                    b.HasIndex("EnfermeraId");

                    b.HasIndex("FamiliarId");

                    b.HasIndex("HistoriaId");

                    b.HasIndex("MedicoId");

                    b.HasDiscriminator().HasValue("paciente");
                });

            modelBuilder.Entity("HospiEnCasa.App.Dominio.signoVital", b =>
                {
                    b.HasOne("HospiEnCasa.App.Dominio.paciente", null)
                        .WithMany("SignosVitales")
                        .HasForeignKey("pacienteId");
                });

            modelBuilder.Entity("HospiEnCasa.App.Dominio.sugerenciaCuidado", b =>
                {
                    b.HasOne("HospiEnCasa.App.Dominio.historia", null)
                        .WithMany("Sugerencias")
                        .HasForeignKey("historiaId");
                });

            modelBuilder.Entity("HospiEnCasa.App.Dominio.paciente", b =>
                {
                    b.HasOne("HospiEnCasa.App.Dominio.enfermera", "Enfermera")
                        .WithMany()
                        .HasForeignKey("EnfermeraId");

                    b.HasOne("HospiEnCasa.App.Dominio.familiarDesignado", "Familiar")
                        .WithMany()
                        .HasForeignKey("FamiliarId");

                    b.HasOne("HospiEnCasa.App.Dominio.historia", "Historia")
                        .WithMany()
                        .HasForeignKey("HistoriaId");

                    b.HasOne("HospiEnCasa.App.Dominio.medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId");

                    b.Navigation("Enfermera");

                    b.Navigation("Familiar");

                    b.Navigation("Historia");

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("HospiEnCasa.App.Dominio.historia", b =>
                {
                    b.Navigation("Sugerencias");
                });

            modelBuilder.Entity("HospiEnCasa.App.Dominio.paciente", b =>
                {
                    b.Navigation("SignosVitales");
                });
#pragma warning restore 612, 618
        }
    }
}
